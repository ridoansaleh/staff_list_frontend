[{"C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\index.js":"1","C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\reportWebVitals.js":"2","C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\App.js":"3","C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\routes\\index.js":"4","C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\constant.js":"5","C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\routes\\login\\index.js":"6","C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\routes\\staff\\index.js":"7","C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\routes\\dashboard\\index.js":"8","C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\routes\\registration\\index.js":"9","C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\routes\\login\\_loginStyle.js":"10","C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\routes\\dashboard\\_dashboardStyle.js":"11","C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\components\\Header\\index.js":"12","C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\components\\Header\\_headerStyle.js":"13","C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\routes\\registration\\_registrationStyle.js":"14"},{"size":543,"mtime":1610242218526,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1606339171399,"results":"17","hashOfConfig":"16"},{"size":331,"mtime":1610495699925,"results":"18","hashOfConfig":"16"},{"size":572,"mtime":1610495700232,"results":"19","hashOfConfig":"16"},{"size":462,"mtime":1610807895555,"results":"20","hashOfConfig":"16"},{"size":2755,"mtime":1610805083468,"results":"21","hashOfConfig":"16"},{"size":76,"mtime":1610495700560,"results":"22","hashOfConfig":"16"},{"size":5048,"mtime":1610636800011,"results":"23","hashOfConfig":"16"},{"size":5092,"mtime":1610809387321,"results":"24","hashOfConfig":"16"},{"size":376,"mtime":1610805306149,"results":"25","hashOfConfig":"16"},{"size":800,"mtime":1610886399192,"results":"26","hashOfConfig":"16"},{"size":761,"mtime":1610636800003,"results":"27","hashOfConfig":"16"},{"size":154,"mtime":1610636800003,"results":"28","hashOfConfig":"16"},{"size":337,"mtime":1610809075138,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1dpfp2l",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\index.js",[],["60","61"],"C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\App.js",[],"C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\routes\\index.js",[],"C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\constant.js",[],"C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\routes\\login\\index.js",[],"C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\routes\\staff\\index.js",[],"C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\routes\\dashboard\\index.js",["62"],"import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Table, Button, Modal } from \"semantic-ui-react\";\r\nimport Header from \"../../components/Header\";\r\nimport { Container, AddWrapper } from \"./_dashboardStyle\";\r\nimport { ALL_STAFF_API, STAFF_PATH, STAFF_API } from \"../../constant\";\r\n\r\nfunction Dashboard() {\r\n  const [staffList, setStaffList] = useState([]);\r\n  const [selectedStaff, setSelectedStaff] = useState(\"\");\r\n  const [selectedID, setSelectedID] = useState(\"\");\r\n  const [displayModal, setDisplayModal] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const token = sessionStorage.getItem(\"user_token\");\r\n\r\n  const getAllStaffs = () => {\r\n    fetch(ALL_STAFF_API, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Something went wrong\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setStaffList(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllStaffs();\r\n  }, []);\r\n\r\n  const handleAddStaffClick = () => {\r\n    history.push(STAFF_PATH);\r\n  };\r\n\r\n  const handleEditClick = () => {\r\n    history.push(STAFF_PATH);\r\n  };\r\n\r\n  const handleDeleteClick = (staff) => {\r\n    setSelectedID(staff._id);\r\n    setSelectedStaff(staff.name);\r\n    setDisplayModal(true);\r\n  };\r\n\r\n  const handleContinueDelete = (staffID) => {\r\n    fetch(`${STAFF_API}/${staffID}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Something went wrong\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        setSelectedStaff(\"\");\r\n        setSelectedID(\"\");\r\n        getAllStaffs();\r\n        setDisplayModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header />\r\n      <AddWrapper>\r\n        <Button primary onClick={handleAddStaffClick}>\r\n          Add a new Staff\r\n        </Button>\r\n      </AddWrapper>\r\n      <section>\r\n        <Table celled>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Name</Table.HeaderCell>\r\n              <Table.HeaderCell>Gender</Table.HeaderCell>\r\n              <Table.HeaderCell>Religion</Table.HeaderCell>\r\n              <Table.HeaderCell>Marital Status</Table.HeaderCell>\r\n              <Table.HeaderCell>Address</Table.HeaderCell>\r\n              <Table.HeaderCell>City</Table.HeaderCell>\r\n              <Table.HeaderCell>Country</Table.HeaderCell>\r\n              <Table.HeaderCell>Start Date</Table.HeaderCell>\r\n              <Table.HeaderCell>Salary</Table.HeaderCell>\r\n              <Table.HeaderCell>Position</Table.HeaderCell>\r\n              <Table.HeaderCell>Employee Status</Table.HeaderCell>\r\n              <Table.HeaderCell></Table.HeaderCell>\r\n              <Table.HeaderCell></Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {staffList.map((staff) => (\r\n              <Table.Row key={staff._id}>\r\n                <Table.Cell>{staff.name}</Table.Cell>\r\n                <Table.Cell>{staff.gender}</Table.Cell>\r\n                <Table.Cell>{staff.religion}</Table.Cell>\r\n                <Table.Cell>{staff.marital_status}</Table.Cell>\r\n                <Table.Cell>{staff.address}</Table.Cell>\r\n                <Table.Cell>{staff.city}</Table.Cell>\r\n                <Table.Cell>{staff.country}</Table.Cell>\r\n                <Table.Cell>{staff.start_date}</Table.Cell>\r\n                <Table.Cell>{staff.salary}</Table.Cell>\r\n                <Table.Cell>{staff.position}</Table.Cell>\r\n                <Table.Cell>{staff.employee_status}</Table.Cell>\r\n                <Table.Cell>\r\n                  <Button primary onClick={() => handleEditClick()}>\r\n                    Edit\r\n                  </Button>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Button secondary onClick={() => handleDeleteClick(staff)}>\r\n                    Delete\r\n                  </Button>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n      </section>\r\n      <Modal\r\n        dimmer=\"blurring\"\r\n        open={displayModal}\r\n        onClose={() => setDisplayModal(false)}\r\n      >\r\n        <Modal.Header>Delete Confirmation</Modal.Header>\r\n        <Modal.Content>\r\n          Are you sure want to delete <b>{selectedStaff}</b>?\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button negative onClick={() => setDisplayModal(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button positive onClick={() => handleContinueDelete(selectedID)}>\r\n            Continue\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\routes\\registration\\index.js",[],"C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\routes\\login\\_loginStyle.js",[],"C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\routes\\dashboard\\_dashboardStyle.js",[],"C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\components\\Header\\index.js",[],"C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\components\\Header\\_headerStyle.js",[],"C:\\Users\\ASUS\\Documents\\dev\\react\\staff_list_frontend\\src\\routes\\registration\\_registrationStyle.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":41,"column":6,"nodeType":"69","endLine":41,"endColumn":8,"suggestions":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllStaffs'. Either include it or remove the dependency array.","ArrayExpression",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [getAllStaffs]",{"range":"76","text":"77"},[1170,1172],"[getAllStaffs]"]